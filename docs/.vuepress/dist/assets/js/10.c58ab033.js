(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{430:function(r,e,a){"use strict";a.r(e);var n=a(65),t=Object(n.a)({},(function(){var r=this,e=r.$createElement,a=r._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h1",{attrs:{id:"速览包管理器-npm-yarn-pnpm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#速览包管理器-npm-yarn-pnpm"}},[r._v("#")]),r._v(" 速览包管理器：npm, yarn, pnpm")]),r._v(" "),a("h2",{attrs:{id:"intro"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#intro"}},[r._v("#")]),r._v(" intro")]),r._v(" "),a("ul",[a("li",[r._v("它们都是前端的包管理器（package manager）")]),r._v(" "),a("li",[r._v("按时间先后来讲大概是：旧 > npm > yarn > pnpm > 新")])]),r._v(" "),a("h2",{attrs:{id:"difference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#difference"}},[r._v("#")]),r._v(" difference")]),r._v(" "),a("h3",{attrs:{id:"npm-node-pkgmakeinst"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm-node-pkgmakeinst"}},[r._v("#")]),r._v(" npm：Node PkgMakeinst")]),r._v(" "),a("h4",{attrs:{id:"时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间"}},[r._v("#")]),r._v(" 时间")]),r._v(" "),a("p",[a("strong",[r._v("最早发布的包管理器是 npm，早在 2010 年 1 月。它确立了包管理器今天如何工作的核心原则。")])]),r._v(" "),a("h4",{attrs:{id:"npm-其实不是-node-package-manager-的简称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#npm-其实不是-node-package-manager-的简称"}},[r._v("#")]),r._v(' npm 其实不是 "Node Package Manager" 的简称')]),r._v(" "),a("blockquote",[a("p",[r._v('Is "npm" an acronym for "Node Package Manager"?')]),r._v(" "),a("p",[r._v("Contrary to popular belief, "),a("strong",[a("code",[r._v("npm")])]),r._v(" "),a("strong",[r._v("is not")]),r._v(' in fact an acronym for "Node Package Manager"; It is a recursive bacronymic abbreviation for '),a("strong",[r._v('"npm is not an acronym"')]),r._v(' (if the project was named "ninaa", then it would be an acronym). The precursor to '),a("strong",[a("code",[r._v("npm")])]),r._v(" was actually a bash utility named "),a("strong",[r._v('"pm"')]),r._v(", which was the shortform name of "),a("strong",[r._v('"pkgmakeinst"')]),r._v(" - a bash function that installed various things on various platforms. If "),a("strong",[a("code",[r._v("npm")])]),r._v(' were to ever have been considered an acronym, it would be as "node pm" or, potentially "new pm".')]),r._v(" "),a("p",[r._v("“npm”是“Node Package Manager”的首字母缩写词吗？")]),r._v(" "),a("p",[r._v("与流行的看法相反，它实际上"),a("strong",[r._v("并不是")]),r._v("“Node Package Manager”的首字母缩写词；它是 "),a("strong",[r._v("npm is not an acronym")]),r._v(' 的递归首字母缩写词（如果项目名为“ninaa”，那么它将是首字母缩略词）。的前身实际上是一个名为**"pm"'),a("strong",[r._v("的 bash 实用程序，它是")]),r._v('"pkgmakeinst"**的简称——一个在各种平台上安装各种东西的 bash 函数。如果曾经被认为是首字母缩略词，它将是“node pm”，或者可能是“new pm”')])]),r._v(" "),a("hr"),r._v(" "),a("h3",{attrs:{id:"yarn-yet-another-resource-negotiator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yarn-yet-another-resource-negotiator"}},[r._v("#")]),r._v(" yarn："),a("strong",[r._v("Y")]),r._v("et "),a("strong",[r._v("A")]),r._v("nother "),a("strong",[r._v("R")]),r._v("esource "),a("strong",[r._v("N")]),r._v("egotiator")]),r._v(" "),a("h4",{attrs:{id:"时间-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间-2"}},[r._v("#")]),r._v(" 时间")]),r._v(" "),a("p",[r._v("在 2016 年 10 月的"),a("a",{attrs:{href:"https://engineering.fb.com/2016/10/11/web/yarn-a-new-package-manager-for-javascript/",target:"_blank",rel:"noopener noreferrer"}},[r._v("一篇博文"),a("OutboundLink")],1),r._v("中，Facebook 宣布与 Google 和其他一些公司合作开发一个新的包管理器，以解决 npm 当时存在的一致性、安全性和性能问题。他们将替代品命名为"),a("a",{attrs:{href:"https://classic.yarnpkg.com/lang/en/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Yarn"),a("OutboundLink")],1),r._v("，它代表 Yet Another Resource Negotiator。")]),r._v(" "),a("h4",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[r._v("#")]),r._v(" 特点：")]),r._v(" "),a("p",[r._v("尽管 Yarn 的架构设计基于 npm 建立的许多概念和流程，但 Yarn 在其初始版本中对包管理器领域产生了重大影响。与 npm 相比，Yarn 并行化操作以加快安装过程，这一直是 npm 早期版本的主要痛点。")]),r._v(" "),a("h4",{attrs:{id:"版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#版本"}},[r._v("#")]),r._v(" 版本")]),r._v(" "),a("p",[r._v("Yarn v1"),a("a",{attrs:{href:"https://classic.yarnpkg.com/en/docs/install#mac-stable",target:"_blank",rel:"noopener noreferrer"}},[r._v("于 2020 年"),a("OutboundLink")],1),a("a",{attrs:{href:"https://classic.yarnpkg.com/en/docs/install#mac-stable",target:"_blank",rel:"noopener noreferrer"}},[r._v("进入维护模式"),a("OutboundLink")],1),r._v(" 。从那时起，v1.x 系列被认为是旧版，并更名为 Yarn Classic。它的继任者 Yarn v2 或 Berry 现在是活跃的开发分支。")]),r._v(" "),a("hr"),r._v(" "),a("h3",{attrs:{id:"yarn-v2-berry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yarn-v2-berry"}},[r._v("#")]),r._v(" Yarn (v2, Berry)")]),r._v(" "),a("h4",{attrs:{id:"时间-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间-3"}},[r._v("#")]),r._v(" 时间")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://yarnpkg.com/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Yarn 2"),a("OutboundLink")],1),r._v("于 2020 年 1 月发布，被宣传为原始 Yarn 的重大升级。Yarn 团队开始将其称为 Yarn Berry，以更明显地表明它本质上是一个具有新代码库和新原则的新包管理器。")]),r._v(" "),a("h4",{attrs:{id:"特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[r._v("#")]),r._v(" 特性")]),r._v(" "),a("p",[r._v("Yarn Berry 的主要创新是其"),a("a",{attrs:{href:"https://yarnpkg.com/features/pnp/",target:"_blank",rel:"noopener noreferrer"}},[r._v("即插即用 (PnP)"),a("OutboundLink")],1),r._v("方法，它是作为"),a("a",{attrs:{href:"https://yarnpkg.com/features/pnp/#fixing-node_modules",target:"_blank",rel:"noopener noreferrer"}},[r._v("修复"),a("code",[r._v("node_modules")]),a("OutboundLink")],1),r._v(". 不是生成"),a("code",[r._v("node_modules")]),r._v("，而是生成具有依赖关系查找表的文件，因为它是单个文件而不是嵌套文件夹结构，因此可以更有效地处理。此外，每个包都以"),a("a",{attrs:{href:"https://yarnpkg.com/features/pnp/#packages-are-stored-inside-zip-archives-how-can-i-access-their-files",target:"_blank",rel:"noopener noreferrer"}},[r._v("zip 文件"),a("OutboundLink")],1),r._v("的形式存储在文件夹内，占用的磁盘空间比文件夹少。"),a("code",[r._v(".pnp.cjs")]),a("a",{attrs:{href:"https://yarnpkg.com/features/pnp/#packages-are-stored-inside-zip-archives-how-can-i-access-their-files",target:"_blank",rel:"noopener noreferrer"}},[a("OutboundLink")],1),a("code",[r._v(".yarn/cache/``node_modules")])]),r._v(" "),a("hr"),r._v(" "),a("h3",{attrs:{id:"pnpm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pnpm"}},[r._v("#")]),r._v(" pnpm")]),r._v(" "),a("h4",{attrs:{id:"时间-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#时间-4"}},[r._v("#")]),r._v(" 时间")]),r._v(" "),a("p",[r._v("pnpm 的第 1 版由 Zoltan "),a("a",{attrs:{href:"https://pnpm.io/",target:"_blank",rel:"noopener noreferrer"}},[r._v("Kochan"),a("OutboundLink")],1),r._v("于 2017 年发布。它是 npm 的替代品，所以如果你有一个 npm 项目，你可以马上使用 pnpm！")]),r._v(" "),a("h4",{attrs:{id:"动机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动机"}},[r._v("#")]),r._v(" 动机")]),r._v(" "),a("p",[r._v("pnpm 的创建者对 npm 和 Yarn的"),a("a",{attrs:{href:"https://medium.com/pnpm/why-should-we-use-pnpm-75ca4bfe7d93",target:"_blank",rel:"noopener noreferrer"}},[r._v("主要问题"),a("OutboundLink")],1),r._v("是跨项目使用的依赖项的冗余存储。尽管 Yarn Classic 比 npm 具有速度优势，但它使用相同的依赖解析方法，这对 pnpm 的创建者来说是不行的：npm 和 Yarn Classic 使用 "),a("strong",[r._v("hoisting")]),r._v(" 来扁平化他们的"),a("code",[r._v("node_modules")]),r._v(".")]),r._v(" "),a("p",[r._v("pnpm 没有 "),a("strong",[r._v("hoisting")]),r._v("，而是引入了另一种依赖解决策略："),a("a",{attrs:{href:"https://pnpm.io/next/symlinked-node-modules-structure",target:"_blank",rel:"noopener noreferrer"}},[r._v("内容可寻址存储"),a("OutboundLink")],1),r._v("。此方法会生成一个嵌套"),a("code",[r._v("node_modules")]),r._v("文件夹，该文件夹将包存储在您的主文件夹 ( ) 上的全局存储中。每个版本的依赖项仅物理存储在该文件夹中一次，构成单一事实来源并节省相当多的磁盘空间。"),a("code",[r._v("~/.pnpm-store/")])]),r._v(" "),a("p",[a("strong",[r._v("pnpm 希望解决 node_modules 占用过多磁盘空间的问题：")])]),r._v(" "),a("blockquote",[a("p",[r._v("当使用 npm 或 Yarn 时，如果你有 100 个项目使用了某个依赖（dependency），就会有 100 份该依赖的副本保存在硬盘上。  而在使用 pnpm 时，依赖会被存储在内容可寻址的存储中，所以：")]),r._v(" "),a("ol",[a("li",[r._v("如果你用到了某依赖项的不同版本，只会将不同版本间有差异的文件添加到仓库。 例如，如果某个包有100个文件，而它的新版本只改变了其中1个文件。那么 "),a("code",[r._v("pnpm update")]),r._v(" 时只会向存储中心额外添加1个新文件，而不会因为仅仅一个文件的改变复制整新版本包的内容。")]),r._v(" "),a("li",[r._v("所有文件都会存储在硬盘上的某一位置。 当软件包被被安装时，包里的文件会硬链接到这一位置，而不会占用额外的磁盘空间。 这允许你跨项目地共享同一版本的依赖。")])])]),r._v(" "),a("h2",{attrs:{id:"ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[r._v("#")]),r._v(" ref")]),r._v(" "),a("p",[a("a",{attrs:{href:"https://pnpm.io/zh/motivation",target:"_blank",rel:"noopener noreferrer"}},[r._v("pnpm 项目初衷"),a("OutboundLink")],1)]),r._v(" "),a("p",[a("a",{attrs:{href:"https://blog.logrocket.com/javascript-package-managers-compared/",target:"_blank",rel:"noopener noreferrer"}},[r._v("[英文]JavaScript 包管理器比较：npm、Yarn 还是 pnpm？"),a("OutboundLink")],1)]),r._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/npm/cli#is-npm-an-acronym-for-node-package-manager",target:"_blank",rel:"noopener noreferrer"}},[r._v("[英文] npm 其实不是 node package manager"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=t.exports}}]);