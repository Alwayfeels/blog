(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{302:function(t,s,a){"use strict";a.r(s);var e=a(13),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"vue3-中的逻辑复用方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue3-中的逻辑复用方案"}},[t._v("#")]),t._v(" Vue3 中的逻辑复用方案")]),t._v(" "),s("h2",{attrs:{id:"无渲染组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无渲染组件"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cn.vuejs.org/guide/components/slots.html#scoped-slots",target:"_blank",rel:"noopener noreferrer"}},[t._v("无渲染组件"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("strong",[t._v("定义：")])]),t._v(" "),s("blockquote",[s("p",[t._v("一些组件可能只包括了逻辑而不需要自己渲染内容，视图输出通过作用域插槽全权交给了消费者组件。我们将这种类型的组件称为"),s("strong",[t._v("无渲染组件")]),t._v("。")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("MouseTracker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-slot")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{ x, y }"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  Mouse is at: {{ x }}, {{ y }}\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("MouseTracker")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h2",{attrs:{id:"组合式函数-composables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#组合式函数-composables"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://cn.vuejs.org/guide/reusability/composables.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("组合式函数（composables）"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("strong",[t._v("定义：")])]),t._v(" "),s("blockquote",[s("p",[t._v("在 Vue 应用的概念中，“组合式函数”(Composables) 是一个利用 Vue 的组合式 API 来封装和复用"),s("strong",[t._v("有状态逻辑")]),t._v("的函数。（它们被约定使用 “use” 开头）")])]),t._v(" "),s("p",[s("strong",[t._v("使用：")])]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("setup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}},[s("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" useMouse "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./mouse.js'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useMouse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Mouse position is at: {{ x }}, {{ y }}"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("template")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("h3",{attrs:{id:"和-mixin-的对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-mixin-的对比"}},[t._v("#")]),t._v(" 和 Mixin 的对比"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/reusability/composables.html#vs-mixins",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("Vue 2 的用户可能会对 "),s("a",{attrs:{href:"https://cn.vuejs.org/api/options-composition.html#mixins",target:"_blank",rel:"noopener noreferrer"}},[t._v("mixins"),s("OutboundLink")],1),t._v(" 选项比较熟悉。它也让我们能够把组件逻辑提取到可复用的单元里。然而 mixins 有三个主要的短板：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("不清晰的数据来源")]),t._v("：当使用了多个 mixin 时，实例上的数据属性来自哪个 mixin 变得不清晰，这使追溯实现和理解组件行为变得困难。这也是我们推荐在组合式函数中使用 ref + 解构模式的理由：让属性的来源在消费组件时一目了然。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("命名空间冲突")]),t._v("：多个来自不同作者的 mixin 可能会注册相同的属性名，造成命名冲突。若使用组合式函数，你可以通过在解构变量时对变量进行重命名来避免相同的键名。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("隐式的跨 mixin 交流")]),t._v("：多个 mixin 需要依赖共享的属性名来进行相互作用，这使得它们隐性地耦合在一起。而一个组合式函数的返回值可以作为另一个组合式函数的参数被传入，像普通函数那样。")])])]),t._v(" "),s("p",[t._v("基于上述理由，我们不再推荐在 Vue 3 中继续使用 mixin。保留该功能只是为了项目迁移的需求和照顾熟悉它的用户。")]),t._v(" "),s("h3",{attrs:{id:"和无渲染组件的对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和无渲染组件的对比"}},[t._v("#")]),t._v(" 和无渲染组件的对比"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/reusability/composables.html#vs-renderless-components",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("在组件插槽一章中，我们讨论过了基于作用域插槽的"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/components/slots.html#renderless-components",target:"_blank",rel:"noopener noreferrer"}},[t._v("无渲染组件"),s("OutboundLink")],1),t._v("。我们甚至用它实现了一样的鼠标追踪器示例。")]),t._v(" "),s("p",[t._v("组合式函数相对于无渲染组件的主要优势是：组合式函数不会产生额外的组件实例开销。当在整个应用中使用时，由无渲染组件产生的额外组件实例会带来无法忽视的性能开销。")]),t._v(" "),s("p",[t._v("我们推荐在纯逻辑复用时使用组合式函数，在需要同时复用逻辑和视图布局时使用无渲染组件。")]),t._v(" "),s("h3",{attrs:{id:"和-react-hooks-的对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和-react-hooks-的对比"}},[t._v("#")]),t._v(" 和 React Hooks 的对比"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/reusability/composables.html#vs-react-hooks",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("如果你有 React 的开发经验，你可能注意到组合式函数和自定义 React hooks 非常相似。组合式 API 的一部分灵感正来自于 React hooks，Vue 的组合式函数也的确在逻辑组合能力上与 React hooks 相近。然而，Vue 的组合式函数是基于 Vue 细粒度的响应性系统，这和 React hooks 的执行模型有本质上的不同。这一话题在"),s("a",{attrs:{href:"https://cn.vuejs.org/guide/extras/composition-api-faq.html#comparison-with-react-hooks",target:"_blank",rel:"noopener noreferrer"}},[t._v("组合式 API 的常见问题"),s("OutboundLink")],1),t._v("中有更细致的讨论。")])])}),[],!1,null,null,null);s.default=n.exports}}]);